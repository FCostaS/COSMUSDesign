<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="world" default="empty"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" value="true" />
  <arg name="model" default="$(find cosmus_description)/cessna_c172/model.urdf"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find cosmus_description):$(find cosmus_gazebo)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find cosmus_gazebo)/worlds/mcmillan_airfield.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- UAV 1 -->
  <group ns="/uav1">

      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="/uav1/robot_description" command="cat $(find cosmus_models)/cessna_c172/model.sdf"/>

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="sdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-sdf -model uav1 -param robot_description -x 0 -y 0 -z 0.1 -Y -1.5708"/>

      <node pkg="cosmus_communication" name="Odometry" type="Odometry.py" output="screen"> </node>
  </group>

</launch>
